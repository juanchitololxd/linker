# This workflow will build a golang project and run tests
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Validate Quality Code

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "features/pipeline" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Setup environment variables
      env:
        FEATURE_FLAG: ${{ secrets.FEATURE_FLAG }}
        DB_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
        DB_PASSWD: ${{ secrets.DEV_DB_PASSWD }}
      run: |
        echo ${{ secrets.ENV_DEPLOY }}
        chmod +x ./scripts/setup-project-linux.sh
        ./scripts/setup-project-linux.sh dev
        sed -i 's/{{DB_USERNAME}}/'"$DB_USERNAME"'/g' .env
        sed -i 's/{{DB_PASSWD}}/'"$DB_PASSWD"'/g' .env

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Build
      run: go build -v ./cmd/api

  tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Run Tests
      run: go test -v ./...

  deploy:
    runs-on: ubuntu-latest
    needs: [build, tests]
    steps:
    - uses: actions/checkout@v4
    - name: Transfer files via SCP
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY_JP }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 149.130.183.133 >> ~/.ssh/known_hosts
        scp -i ~/.ssh/id_rsa ./scripts/kill-current-process.sh ubuntu@149.130.183.133:~/scripts/kill-current-process.sh
        ssh -i ~/.ssh/id_rsa ubuntu@149.130.183.133 'chmod +x ~/scripts/kill-current-process.sh && ~/scripts/kill-current-process.sh && mkdir -p linker'
        scp -i ~/.ssh/id_rsa api ubuntu@149.130.183.133:/home/ubuntu/linker/url-shortener
        scp -i ~/.ssh/id_rsa .env ubuntu@149.130.183.133:/home/ubuntu/linker/.env
        echo "archivos enviados"
        ssh -i ~/.ssh/id_rsa ubuntu@149.130.183.133 'nohup ~/linker/url-shortener > ~/linker/url-shortener.log 2>&1 &'
